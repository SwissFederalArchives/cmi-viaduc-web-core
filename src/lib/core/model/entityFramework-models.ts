// ----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
// ----------------------

/* eslint-disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export class CollectionListItemDto implements ICollectionListItemDto {
	collectionId!: number;
	parentId?: number | undefined;
	language?: string | undefined;
	title?: string | undefined;
	descriptionShort?: string | undefined;
	description?: string | undefined;
	validFrom!: Date;
	validTo!: Date;
	collectionTypeId!: number;
	imageAltText?: string | undefined;
	imageMimeType?: string | undefined;
	link?: string | undefined;
	collectionPath?: string | undefined;
	sortOrder!: number;
	createdOn!: Date;
	createdBy?: string | undefined;
	modifiedOn?: Date | undefined;
	modifiedBy?: string | undefined;
	parent?: string | undefined;
	childCollections?: string | undefined;

	constructor(data?: ICollectionListItemDto) {
		if (data) {
			for (var property in data) {
				if (data.hasOwnProperty(property))
					(<any>this)[property] = (<any>data)[property];
			}
		}
	}

	init(_data?: any) {
		if (_data) {
			this.collectionId = _data["collectionId"];
			this.parentId = _data["parentId"];
			this.language = _data["language"];
			this.title = _data["title"];
			this.descriptionShort = _data["descriptionShort"];
			this.description = _data["description"];
			this.validFrom = _data["validFrom"] ? new Date(_data["validFrom"].toString()) : <any>undefined;
			this.validTo = _data["validTo"] ? new Date(_data["validTo"].toString()) : <any>undefined;
			this.collectionTypeId = _data["collectionTypeId"];
			this.imageAltText = _data["imageAltText"];
			this.imageMimeType = _data["imageMimeType"];
			this.link = _data["link"];
			this.collectionPath = _data["collectionPath"];
			this.sortOrder = _data["sortOrder"];
			this.createdOn = _data["createdOn"] ? new Date(_data["createdOn"].toString()) : <any>undefined;
			this.createdBy = _data["createdBy"];
			this.modifiedOn = _data["modifiedOn"] ? new Date(_data["modifiedOn"].toString()) : <any>undefined;
			this.modifiedBy = _data["modifiedBy"];
			this.parent = _data["parent"];
			this.childCollections = _data["childCollections"];
		}
	}

	static fromJS(data: any): CollectionListItemDto {
		data = typeof data === 'object' ? data : {};
		let result = new CollectionListItemDto();
		result.init(data);
		return result;
	}

	toJSON(data?: any) {
		data = typeof data === 'object' ? data : {};
		data["collectionId"] = this.collectionId;
		data["parentId"] = this.parentId;
		data["language"] = this.language;
		data["title"] = this.title;
		data["descriptionShort"] = this.descriptionShort;
		data["description"] = this.description;
		data["validFrom"] = this.validFrom ? this.validFrom.toISOString() : <any>undefined;
		data["validTo"] = this.validTo ? this.validTo.toISOString() : <any>undefined;
		data["collectionTypeId"] = this.collectionTypeId;
		data["imageAltText"] = this.imageAltText;
		data["imageMimeType"] = this.imageMimeType;
		data["link"] = this.link;
		data["collectionPath"] = this.collectionPath;
		data["sortOrder"] = this.sortOrder;
		data["createdOn"] = this.createdOn ? this.createdOn.toISOString() : <any>undefined;
		data["createdBy"] = this.createdBy;
		data["modifiedOn"] = this.modifiedOn ? this.modifiedOn.toISOString() : <any>undefined;
		data["modifiedBy"] = this.modifiedBy;
		data["parent"] = this.parent;
		data["childCollections"] = this.childCollections;
		return data;
	}
}

export interface ICollectionListItemDto {
	collectionId: number;
	parentId?: number | undefined;
	language?: string | undefined;
	title?: string | undefined;
	descriptionShort?: string | undefined;
	description?: string | undefined;
	validFrom: Date;
	validTo: Date;
	collectionTypeId: number;
	imageAltText?: string | undefined;
	imageMimeType?: string | undefined;
	link?: string | undefined;
	collectionPath?: string | undefined;
	sortOrder: number;
	createdOn: Date;
	createdBy?: string | undefined;
	modifiedOn?: Date | undefined;
	modifiedBy?: string | undefined;
	parent?: string | undefined;
	childCollections?: string | undefined;
}

export class CollectionDto implements ICollectionDto {
	collectionId!: number;
	parentId?: number | undefined;
	language?: string | undefined;
	title?: string | undefined;
	descriptionShort?: string | undefined;
	description?: string | undefined;
	validFrom!: Date;
	validTo!: Date;
	collectionTypeId!: number;
	image?: string | undefined;
	thumbnail?: string | undefined;
	imageAltText?: string | undefined;
	imageMimeType?: string | undefined;
	link?: string | undefined;
	collectionPath?: string | undefined;
	sortOrder!: number;
	createdOn!: Date;
	createdBy?: string | undefined;
	modifiedOn?: Date | undefined;
	modifiedBy?: string | undefined;
	childCollections?: CollectionDto[] | undefined;
	parent?: CollectionDto | undefined;

	constructor(data?: ICollectionDto) {
		if (data) {
			for (var property in data) {
				if (data.hasOwnProperty(property))
					(<any>this)[property] = (<any>data)[property];
			}
		}
	}

	init(_data?: any) {
		if (_data) {
			this.collectionId = _data["collectionId"];
			this.parentId = _data["parentId"];
			this.language = _data["language"];
			this.title = _data["title"];
			this.descriptionShort = _data["descriptionShort"];
			this.description = _data["description"];
			this.validFrom = _data["validFrom"] ? new Date(_data["validFrom"].toString()) : <any>undefined;
			this.validTo = _data["validTo"] ? new Date(_data["validTo"].toString()) : <any>undefined;
			this.collectionTypeId = _data["collectionTypeId"];
			this.image = _data["image"];
			this.thumbnail = _data["thumbnail"];
			this.imageAltText = _data["imageAltText"];
			this.imageMimeType = _data["imageMimeType"];
			this.link = _data["link"];
			this.collectionPath = _data["collectionPath"];
			this.sortOrder = _data["sortOrder"];
			this.createdOn = _data["createdOn"] ? new Date(_data["createdOn"].toString()) : <any>undefined;
			this.createdBy = _data["createdBy"];
			this.modifiedOn = _data["modifiedOn"] ? new Date(_data["modifiedOn"].toString()) : <any>undefined;
			this.modifiedBy = _data["modifiedBy"];
			if (Array.isArray(_data["childCollections"])) {
				this.childCollections = [] as any;
				for (let item of _data["childCollections"])
					this.childCollections!.push(CollectionDto.fromJS(item));
			}
			this.parent = _data["parent"] ? CollectionDto.fromJS(_data["parent"]) : <any>undefined;
		}
	}

	static fromJS(data: any): CollectionDto {
		data = typeof data === 'object' ? data : {};
		let result = new CollectionDto();
		result.init(data);
		return result;
	}

	toJSON(data?: any) {
		data = typeof data === 'object' ? data : {};
		data["collectionId"] = this.collectionId;
		data["parentId"] = this.parentId;
		data["language"] = this.language;
		data["title"] = this.title;
		data["descriptionShort"] = this.descriptionShort;
		data["description"] = this.description;
		data["validFrom"] = this.validFrom ? this.validFrom.toISOString() : <any>undefined;
		data["validTo"] = this.validTo ? this.validTo.toISOString() : <any>undefined;
		data["collectionTypeId"] = this.collectionTypeId;
		data["image"] = this.image;
		data["thumbnail"] = this.thumbnail;
		data["imageAltText"] = this.imageAltText;
		data["imageMimeType"] = this.imageMimeType;
		data["link"] = this.link;
		data["collectionPath"] = this.collectionPath;
		data["sortOrder"] = this.sortOrder;
		data["createdOn"] = this.createdOn ? this.createdOn.toISOString() : <any>undefined;
		data["createdBy"] = this.createdBy;
		data["modifiedOn"] = this.modifiedOn ? this.modifiedOn.toISOString() : <any>undefined;
		data["modifiedBy"] = this.modifiedBy;
		if (Array.isArray(this.childCollections)) {
			data["childCollections"] = [];
			for (let item of this.childCollections)
				data["childCollections"].push(item.toJSON());
		}
		data["parent"] = this.parent ? this.parent.toJSON() : <any>undefined;
		return data;
	}
}

export interface ICollectionDto {
	collectionId: number;
	parentId?: number | undefined;
	language?: string | undefined;
	title?: string | undefined;
	descriptionShort?: string | undefined;
	description?: string | undefined;
	validFrom: Date;
	validTo: Date;
	collectionTypeId: number;
	image?: string | undefined;
	thumbnail?: string | undefined;
	imageAltText?: string | undefined;
	imageMimeType?: string | undefined;
	link?: string | undefined;
	collectionPath?: string | undefined;
	sortOrder: number;
	createdOn: Date;
	createdBy?: string | undefined;
	modifiedOn?: Date | undefined;
	modifiedBy?: string | undefined;
	childCollections?: CollectionDto[] | undefined;
	parent?: CollectionDto | undefined;
}

export class VManuelleKorrekturDto implements IVManuelleKorrekturDto {
	manuelleKorrekturId!: number;
	veId!: number;
	signatur?: string | undefined;
	schutzfristende!: Date;
	titel?: string | undefined;
	erzeugtAm!: Date;
	erzeugtVon?: string | undefined;
	geändertAm?: Date | undefined;
	geändertVon?: string | undefined;
	anonymisierungsstatus!: number;
	kommentar?: string | undefined;
	hierachiestufe?: string | undefined;
	aktenzeichen?: string | undefined;
	entstehungszeitraum?: string | undefined;
	zugänglichkeitGemässBGA?: string | undefined;
	schutzfristverzeichnung?: string | undefined;
	zuständigeStelle?: string | undefined;
	publikationsrechte?: string | undefined;
	anonymisiertZumErfassungszeitpunk!: boolean;
	titelGemAIS?: string | undefined;
	titelAutomatischAnonymisiert?: string | undefined;
	titelManuellKorrigiert?: string | undefined;
	darinGemAIS?: string | undefined;
	darinAutomatischAnonymisiert?: string | undefined;
	darinManuellKorrigiert?: string | undefined;
	zusatzkomponenteGemAIS?: string | undefined;
	zusatzkomponenteAutomatischAnonymisiert?: string | undefined;
	zusatzkomponenteManuellKorrigiert?: string | undefined;
	zusaetzlicheInformationenGemAIS?: string | undefined;
	zusaetzlicheInformationenAutomatischAnonymisiert?: string | undefined;
	zusaetzlicheInformationenManuellKorrigiert?: string | undefined;
	verwandteVEGemAIS?: string | undefined;
	verwandteVEAutomatischAnonymisiert?: string | undefined;
	verwandteVEManuellKorrigiert?: string | undefined;

	constructor(data?: IVManuelleKorrekturDto) {
		if (data) {
			for (var property in data) {
				if (data.hasOwnProperty(property))
					(<any>this)[property] = (<any>data)[property];
			}
		}
	}

	init(_data?: any) {
		if (_data) {
			this.manuelleKorrekturId = _data["manuelleKorrekturId"];
			this.veId = _data["veId"];
			this.signatur = _data["signatur"];
			this.schutzfristende = _data["schutzfristende"] ? new Date(_data["schutzfristende"].toString()) : <any>undefined;
			this.titel = _data["titel"];
			this.erzeugtAm = _data["erzeugtAm"] ? new Date(_data["erzeugtAm"].toString()) : <any>undefined;
			this.erzeugtVon = _data["erzeugtVon"];
			this.geändertAm = _data["geändertAm"] ? new Date(_data["geändertAm"].toString()) : <any>undefined;
			this.geändertVon = _data["geändertVon"];
			this.anonymisierungsstatus = _data["anonymisierungsstatus"];
			this.kommentar = _data["kommentar"];
			this.hierachiestufe = _data["hierachiestufe"];
			this.aktenzeichen = _data["aktenzeichen"];
			this.entstehungszeitraum = _data["entstehungszeitraum"];
			this.zugänglichkeitGemässBGA = _data["zugänglichkeitGemässBGA"];
			this.schutzfristverzeichnung = _data["schutzfristverzeichnung"];
			this.zuständigeStelle = _data["zuständigeStelle"];
			this.publikationsrechte = _data["publikationsrechte"];
			this.anonymisiertZumErfassungszeitpunk = _data["anonymisiertZumErfassungszeitpunk"];
			this.titelGemAIS = _data["titelGemAIS"];
			this.titelAutomatischAnonymisiert = _data["titelAutomatischAnonymisiert"];
			this.titelManuellKorrigiert = _data["titelManuellKorrigiert"];
			this.darinGemAIS = _data["darinGemAIS"];
			this.darinAutomatischAnonymisiert = _data["darinAutomatischAnonymisiert"];
			this.darinManuellKorrigiert = _data["darinManuellKorrigiert"];
			this.zusatzkomponenteGemAIS = _data["zusatzkomponenteGemAIS"];
			this.zusatzkomponenteAutomatischAnonymisiert = _data["zusatzkomponenteAutomatischAnonymisiert"];
			this.zusatzkomponenteManuellKorrigiert = _data["zusatzkomponenteManuellKorrigiert"];
			this.zusaetzlicheInformationenGemAIS = _data["zusaetzlicheInformationenGemAIS"];
			this.zusaetzlicheInformationenAutomatischAnonymisiert = _data["zusaetzlicheInformationenAutomatischAnonymisiert"];
			this.zusaetzlicheInformationenManuellKorrigiert = _data["zusaetzlicheInformationenManuellKorrigiert"];
			this.verwandteVEGemAIS = _data["verwandteVEGemAIS"];
			this.verwandteVEAutomatischAnonymisiert = _data["verwandteVEAutomatischAnonymisiert"];
			this.verwandteVEManuellKorrigiert = _data["verwandteVEManuellKorrigiert"];
		}
	}

	static fromJS(data: any): VManuelleKorrekturDto {
		data = typeof data === 'object' ? data : {};
		let result = new VManuelleKorrekturDto();
		result.init(data);
		return result;
	}

	toJSON(data?: any) {
		data = typeof data === 'object' ? data : {};
		data["manuelleKorrekturId"] = this.manuelleKorrekturId;
		data["veId"] = this.veId;
		data["signatur"] = this.signatur;
		data["schutzfristende"] = this.schutzfristende ? this.schutzfristende.toISOString() : <any>undefined;
		data["titel"] = this.titel;
		data["erzeugtAm"] = this.erzeugtAm ? this.erzeugtAm.toISOString() : <any>undefined;
		data["erzeugtVon"] = this.erzeugtVon;
		data["geändertAm"] = this.geändertAm ? this.geändertAm.toISOString() : <any>undefined;
		data["geändertVon"] = this.geändertVon;
		data["anonymisierungsstatus"] = this.anonymisierungsstatus;
		data["kommentar"] = this.kommentar;
		data["hierachiestufe"] = this.hierachiestufe;
		data["aktenzeichen"] = this.aktenzeichen;
		data["entstehungszeitraum"] = this.entstehungszeitraum;
		data["zugänglichkeitGemässBGA"] = this.zugänglichkeitGemässBGA;
		data["schutzfristverzeichnung"] = this.schutzfristverzeichnung;
		data["zuständigeStelle"] = this.zuständigeStelle;
		data["publikationsrechte"] = this.publikationsrechte;
		data["anonymisiertZumErfassungszeitpunk"] = this.anonymisiertZumErfassungszeitpunk;
		data["titelGemAIS"] = this.titelGemAIS;
		data["titelAutomatischAnonymisiert"] = this.titelAutomatischAnonymisiert;
		data["titelManuellKorrigiert"] = this.titelManuellKorrigiert;
		data["darinGemAIS"] = this.darinGemAIS;
		data["darinAutomatischAnonymisiert"] = this.darinAutomatischAnonymisiert;
		data["darinManuellKorrigiert"] = this.darinManuellKorrigiert;
		data["zusatzkomponenteGemAIS"] = this.zusatzkomponenteGemAIS;
		data["zusatzkomponenteAutomatischAnonymisiert"] = this.zusatzkomponenteAutomatischAnonymisiert;
		data["zusatzkomponenteManuellKorrigiert"] = this.zusatzkomponenteManuellKorrigiert;
		data["zusaetzlicheInformationenGemAIS"] = this.zusaetzlicheInformationenGemAIS;
		data["zusaetzlicheInformationenAutomatischAnonymisiert"] = this.zusaetzlicheInformationenAutomatischAnonymisiert;
		data["zusaetzlicheInformationenManuellKorrigiert"] = this.zusaetzlicheInformationenManuellKorrigiert;
		data["verwandteVEGemAIS"] = this.verwandteVEGemAIS;
		data["verwandteVEAutomatischAnonymisiert"] = this.verwandteVEAutomatischAnonymisiert;
		data["verwandteVEManuellKorrigiert"] = this.verwandteVEManuellKorrigiert;
		return data;
	}
}

export interface IVManuelleKorrekturDto {
	manuelleKorrekturId: number;
	veId: number;
	signatur?: string | undefined;
	schutzfristende: Date;
	titel?: string | undefined;
	erzeugtAm: Date;
	erzeugtVon?: string | undefined;
	geändertAm?: Date | undefined;
	geändertVon?: string | undefined;
	anonymisierungsstatus: number;
	kommentar?: string | undefined;
	hierachiestufe?: string | undefined;
	aktenzeichen?: string | undefined;
	entstehungszeitraum?: string | undefined;
	zugänglichkeitGemässBGA?: string | undefined;
	schutzfristverzeichnung?: string | undefined;
	zuständigeStelle?: string | undefined;
	publikationsrechte?: string | undefined;
	anonymisiertZumErfassungszeitpunk: boolean;
	titelGemAIS?: string | undefined;
	titelAutomatischAnonymisiert?: string | undefined;
	titelManuellKorrigiert?: string | undefined;
	darinGemAIS?: string | undefined;
	darinAutomatischAnonymisiert?: string | undefined;
	darinManuellKorrigiert?: string | undefined;
	zusatzkomponenteGemAIS?: string | undefined;
	zusatzkomponenteAutomatischAnonymisiert?: string | undefined;
	zusatzkomponenteManuellKorrigiert?: string | undefined;
	zusaetzlicheInformationenGemAIS?: string | undefined;
	zusaetzlicheInformationenAutomatischAnonymisiert?: string | undefined;
	zusaetzlicheInformationenManuellKorrigiert?: string | undefined;
	verwandteVEGemAIS?: string | undefined;
	verwandteVEAutomatischAnonymisiert?: string | undefined;
	verwandteVEManuellKorrigiert?: string | undefined;
}

export class ManuelleKorrekturDetailItem implements IManuelleKorrekturDetailItem {
	manuelleKorrektur?: ManuelleKorrekturDto | undefined;
	archivplanKontext?: ArchiveRecordContextItem[] | undefined;
	untergeordneteVEs?: ArchiveRecordContextItem[] | undefined;
	verweiseVEs?: ArchiveRecordContextItem[] | undefined;

	constructor(data?: IManuelleKorrekturDetailItem) {
		if (data) {
			for (var property in data) {
				if (data.hasOwnProperty(property))
					(<any>this)[property] = (<any>data)[property];
			}
		}
	}

	init(_data?: any) {
		if (_data) {
			this.manuelleKorrektur = _data["manuelleKorrektur"] ? ManuelleKorrekturDto.fromJS(_data["manuelleKorrektur"]) : <any>undefined;
			if (Array.isArray(_data["archivplanKontext"])) {
				this.archivplanKontext = [] as any;
				for (let item of _data["archivplanKontext"])
					this.archivplanKontext!.push(ArchiveRecordContextItem.fromJS(item));
			}
			if (Array.isArray(_data["untergeordneteVEs"])) {
				this.untergeordneteVEs = [] as any;
				for (let item of _data["untergeordneteVEs"])
					this.untergeordneteVEs!.push(ArchiveRecordContextItem.fromJS(item));
			}
			if (Array.isArray(_data["verweiseVEs"])) {
				this.verweiseVEs = [] as any;
				for (let item of _data["verweiseVEs"])
					this.verweiseVEs!.push(ArchiveRecordContextItem.fromJS(item));
			}
		}
	}

	static fromJS(data: any): ManuelleKorrekturDetailItem {
		data = typeof data === 'object' ? data : {};
		let result = new ManuelleKorrekturDetailItem();
		result.init(data);
		return result;
	}

	toJSON(data?: any) {
		data = typeof data === 'object' ? data : {};
		data["manuelleKorrektur"] = this.manuelleKorrektur ? this.manuelleKorrektur.toJSON() : <any>undefined;
		if (Array.isArray(this.archivplanKontext)) {
			data["archivplanKontext"] = [];
			for (let item of this.archivplanKontext)
				data["archivplanKontext"].push(item.toJSON());
		}
		if (Array.isArray(this.untergeordneteVEs)) {
			data["untergeordneteVEs"] = [];
			for (let item of this.untergeordneteVEs)
				data["untergeordneteVEs"].push(item.toJSON());
		}
		if (Array.isArray(this.verweiseVEs)) {
			data["verweiseVEs"] = [];
			for (let item of this.verweiseVEs)
				data["verweiseVEs"].push(item.toJSON());
		}
		return data;
	}
}

export interface IManuelleKorrekturDetailItem {
	manuelleKorrektur?: ManuelleKorrekturDto | undefined;
	archivplanKontext?: ArchiveRecordContextItem[] | undefined;
	untergeordneteVEs?: ArchiveRecordContextItem[] | undefined;
	verweiseVEs?: ArchiveRecordContextItem[] | undefined;
}

export class ArchiveRecordContextItem implements IArchiveRecordContextItem {
	level?: string | undefined;
	title?: string | undefined;
	dateRangeText?: string | undefined;
	archiveRecordId?: string | undefined;
	protected!: boolean;
	referenceCode?: string | undefined;

	constructor(data?: IArchiveRecordContextItem) {
		if (data) {
			for (var property in data) {
				if (data.hasOwnProperty(property))
					(<any>this)[property] = (<any>data)[property];
			}
		}
	}

	init(_data?: any) {
		if (_data) {
			this.level = _data["level"];
			this.title = _data["title"];
			this.dateRangeText = _data["dateRangeText"];
			this.archiveRecordId = _data["archiveRecordId"];
			this.protected = _data["protected"];
			this.referenceCode = _data["referenceCode"];
		}
	}

	static fromJS(data: any): ArchiveRecordContextItem {
		data = typeof data === 'object' ? data : {};
		let result = new ArchiveRecordContextItem();
		result.init(data);
		return result;
	}

	toJSON(data?: any) {
		data = typeof data === 'object' ? data : {};
		data["level"] = this.level;
		data["title"] = this.title;
		data["dateRangeText"] = this.dateRangeText;
		data["archiveRecordId"] = this.archiveRecordId;
		data["protected"] = this.protected;
		data["referenceCode"] = this.referenceCode;
		return data;
	}
}

export interface IArchiveRecordContextItem {
	level?: string | undefined;
	title?: string | undefined;
	dateRangeText?: string | undefined;
	archiveRecordId?: string | undefined;
	protected: boolean;
	referenceCode?: string | undefined;
}

export class ManuelleKorrekturDto implements IManuelleKorrekturDto {
	manuelleKorrekturId!: number;
	veId!: number;
	signatur?: string | undefined;
	schutzfristende!: Date;
	titel?: string | undefined;
	erzeugtAm!: Date;
	erzeugtVon?: string | undefined;
	geändertAm?: Date | undefined;
	geändertVon?: string | undefined;
	anonymisierungsstatus!: number;
	kommentar?: string | undefined;
	hierachiestufe?: string | undefined;
	aktenzeichen?: string | undefined;
	entstehungszeitraum?: string | undefined;
	zugänglichkeitGemässBGA?: string | undefined;
	schutzfristverzeichnung?: string | undefined;
	zuständigeStelle?: string | undefined;
	publikationsrechte?: string | undefined;
	anonymisiertZumErfassungszeitpunk!: boolean;
	manuelleKorrekturFelder?: ManuelleKorrekturFeldDto[] | undefined;
	manuelleKorrekturStatusHistories?: ManuelleKorrekturStatusHistoryDto[] | undefined;

	constructor(data?: IManuelleKorrekturDto) {
		if (data) {
			for (var property in data) {
				if (data.hasOwnProperty(property))
					(<any>this)[property] = (<any>data)[property];
			}
		}
	}

	init(_data?: any) {
		if (_data) {
			this.manuelleKorrekturId = _data["manuelleKorrekturId"];
			this.veId = _data["veId"];
			this.signatur = _data["signatur"];
			this.schutzfristende = _data["schutzfristende"] ? new Date(_data["schutzfristende"].toString()) : <any>undefined;
			this.titel = _data["titel"];
			this.erzeugtAm = _data["erzeugtAm"] ? new Date(_data["erzeugtAm"].toString()) : <any>undefined;
			this.erzeugtVon = _data["erzeugtVon"];
			this.geändertAm = _data["geändertAm"] ? new Date(_data["geändertAm"].toString()) : <any>undefined;
			this.geändertVon = _data["geändertVon"];
			this.anonymisierungsstatus = _data["anonymisierungsstatus"];
			this.kommentar = _data["kommentar"];
			this.hierachiestufe = _data["hierachiestufe"];
			this.aktenzeichen = _data["aktenzeichen"];
			this.entstehungszeitraum = _data["entstehungszeitraum"];
			this.zugänglichkeitGemässBGA = _data["zugänglichkeitGemässBGA"];
			this.schutzfristverzeichnung = _data["schutzfristverzeichnung"];
			this.zuständigeStelle = _data["zuständigeStelle"];
			this.publikationsrechte = _data["publikationsrechte"];
			this.anonymisiertZumErfassungszeitpunk = _data["anonymisiertZumErfassungszeitpunk"];
			if (Array.isArray(_data["manuelleKorrekturFelder"])) {
				this.manuelleKorrekturFelder = [] as any;
				for (let item of _data["manuelleKorrekturFelder"])
					this.manuelleKorrekturFelder!.push(ManuelleKorrekturFeldDto.fromJS(item));
			}
			if (Array.isArray(_data["manuelleKorrekturStatusHistories"])) {
				this.manuelleKorrekturStatusHistories = [] as any;
				for (let item of _data["manuelleKorrekturStatusHistories"])
					this.manuelleKorrekturStatusHistories!.push(ManuelleKorrekturStatusHistoryDto.fromJS(item));
			}
		}
	}

	static fromJS(data: any): ManuelleKorrekturDto {
		data = typeof data === 'object' ? data : {};
		let result = new ManuelleKorrekturDto();
		result.init(data);
		return result;
	}

	toJSON(data?: any) {
		data = typeof data === 'object' ? data : {};
		data["manuelleKorrekturId"] = this.manuelleKorrekturId;
		data["veId"] = this.veId;
		data["signatur"] = this.signatur;
		data["schutzfristende"] = this.schutzfristende ? this.schutzfristende.toISOString() : <any>undefined;
		data["titel"] = this.titel;
		data["erzeugtAm"] = this.erzeugtAm ? this.erzeugtAm.toISOString() : <any>undefined;
		data["erzeugtVon"] = this.erzeugtVon;
		data["geändertAm"] = this.geändertAm ? this.geändertAm.toISOString() : <any>undefined;
		data["geändertVon"] = this.geändertVon;
		data["anonymisierungsstatus"] = this.anonymisierungsstatus;
		data["kommentar"] = this.kommentar;
		data["hierachiestufe"] = this.hierachiestufe;
		data["aktenzeichen"] = this.aktenzeichen;
		data["entstehungszeitraum"] = this.entstehungszeitraum;
		data["zugänglichkeitGemässBGA"] = this.zugänglichkeitGemässBGA;
		data["schutzfristverzeichnung"] = this.schutzfristverzeichnung;
		data["zuständigeStelle"] = this.zuständigeStelle;
		data["publikationsrechte"] = this.publikationsrechte;
		data["anonymisiertZumErfassungszeitpunk"] = this.anonymisiertZumErfassungszeitpunk;
		if (Array.isArray(this.manuelleKorrekturFelder)) {
			data["manuelleKorrekturFelder"] = [];
			for (let item of this.manuelleKorrekturFelder)
				data["manuelleKorrekturFelder"].push(item.toJSON());
		}
		if (Array.isArray(this.manuelleKorrekturStatusHistories)) {
			data["manuelleKorrekturStatusHistories"] = [];
			for (let item of this.manuelleKorrekturStatusHistories)
				data["manuelleKorrekturStatusHistories"].push(item.toJSON());
		}
		return data;
	}
}

export interface IManuelleKorrekturDto {
	manuelleKorrekturId: number;
	veId: number;
	signatur?: string | undefined;
	schutzfristende: Date;
	titel?: string | undefined;
	erzeugtAm: Date;
	erzeugtVon?: string | undefined;
	geändertAm?: Date | undefined;
	geändertVon?: string | undefined;
	anonymisierungsstatus: number;
	kommentar?: string | undefined;
	hierachiestufe?: string | undefined;
	aktenzeichen?: string | undefined;
	entstehungszeitraum?: string | undefined;
	zugänglichkeitGemässBGA?: string | undefined;
	schutzfristverzeichnung?: string | undefined;
	zuständigeStelle?: string | undefined;
	publikationsrechte?: string | undefined;
	anonymisiertZumErfassungszeitpunk: boolean;
	manuelleKorrekturFelder?: ManuelleKorrekturFeldDto[] | undefined;
	manuelleKorrekturStatusHistories?: ManuelleKorrekturStatusHistoryDto[] | undefined;
}

export class ManuelleKorrekturFeldDto implements IManuelleKorrekturFeldDto {
	manuelleKorrekturFelderId!: number;
	manuelleKorrekturId!: number;
	feldname?: string | undefined;
	original?: string | undefined;
	automatisch?: string | undefined;
	manuell?: string | undefined;
	manuelleKorrektur?: ManuelleKorrekturDto | undefined;

	constructor(data?: IManuelleKorrekturFeldDto) {
		if (data) {
			for (var property in data) {
				if (data.hasOwnProperty(property))
					(<any>this)[property] = (<any>data)[property];
			}
		}
	}

	init(_data?: any) {
		if (_data) {
			this.manuelleKorrekturFelderId = _data["manuelleKorrekturFelderId"];
			this.manuelleKorrekturId = _data["manuelleKorrekturId"];
			this.feldname = _data["feldname"];
			this.original = _data["original"];
			this.automatisch = _data["automatisch"];
			this.manuell = _data["manuell"];
			this.manuelleKorrektur = _data["manuelleKorrektur"] ? ManuelleKorrekturDto.fromJS(_data["manuelleKorrektur"]) : <any>undefined;
		}
	}

	static fromJS(data: any): ManuelleKorrekturFeldDto {
		data = typeof data === 'object' ? data : {};
		let result = new ManuelleKorrekturFeldDto();
		result.init(data);
		return result;
	}

	toJSON(data?: any) {
		data = typeof data === 'object' ? data : {};
		data["manuelleKorrekturFelderId"] = this.manuelleKorrekturFelderId;
		data["manuelleKorrekturId"] = this.manuelleKorrekturId;
		data["feldname"] = this.feldname;
		data["original"] = this.original;
		data["automatisch"] = this.automatisch;
		data["manuell"] = this.manuell;
		data["manuelleKorrektur"] = this.manuelleKorrektur ? this.manuelleKorrektur.toJSON() : <any>undefined;
		return data;
	}
}

export interface IManuelleKorrekturFeldDto {
	manuelleKorrekturFelderId: number;
	manuelleKorrekturId: number;
	feldname?: string | undefined;
	original?: string | undefined;
	automatisch?: string | undefined;
	manuell?: string | undefined;
	manuelleKorrektur?: ManuelleKorrekturDto | undefined;
}

export class ManuelleKorrekturStatusHistoryDto implements IManuelleKorrekturStatusHistoryDto {
	manuelleKorrekturStatusHistoryId!: number;
	manuelleKorrekturId!: number;
	anonymisierungsstatus!: number;
	erzeugtAm!: Date;
	erzeugtVon?: string | undefined;
	manuelleKorrektur?: ManuelleKorrekturDto | undefined;

	constructor(data?: IManuelleKorrekturStatusHistoryDto) {
		if (data) {
			for (var property in data) {
				if (data.hasOwnProperty(property))
					(<any>this)[property] = (<any>data)[property];
			}
		}
	}

	init(_data?: any) {
		if (_data) {
			this.manuelleKorrekturStatusHistoryId = _data["manuelleKorrekturStatusHistoryId"];
			this.manuelleKorrekturId = _data["manuelleKorrekturId"];
			this.anonymisierungsstatus = _data["anonymisierungsstatus"];
			this.erzeugtAm = _data["erzeugtAm"] ? new Date(_data["erzeugtAm"].toString()) : <any>undefined;
			this.erzeugtVon = _data["erzeugtVon"];
			this.manuelleKorrektur = _data["manuelleKorrektur"] ? ManuelleKorrekturDto.fromJS(_data["manuelleKorrektur"]) : <any>undefined;
		}
	}

	static fromJS(data: any): ManuelleKorrekturStatusHistoryDto {
		data = typeof data === 'object' ? data : {};
		let result = new ManuelleKorrekturStatusHistoryDto();
		result.init(data);
		return result;
	}

	toJSON(data?: any) {
		data = typeof data === 'object' ? data : {};
		data["manuelleKorrekturStatusHistoryId"] = this.manuelleKorrekturStatusHistoryId;
		data["manuelleKorrekturId"] = this.manuelleKorrekturId;
		data["anonymisierungsstatus"] = this.anonymisierungsstatus;
		data["erzeugtAm"] = this.erzeugtAm ? this.erzeugtAm.toISOString() : <any>undefined;
		data["erzeugtVon"] = this.erzeugtVon;
		data["manuelleKorrektur"] = this.manuelleKorrektur ? this.manuelleKorrektur.toJSON() : <any>undefined;
		return data;
	}
}

export interface IManuelleKorrekturStatusHistoryDto {
	manuelleKorrekturStatusHistoryId: number;
	manuelleKorrekturId: number;
	anonymisierungsstatus: number;
	erzeugtAm: Date;
	erzeugtVon?: string | undefined;
	manuelleKorrektur?: ManuelleKorrekturDto | undefined;
}
