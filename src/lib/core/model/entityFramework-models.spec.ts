import {ArchiveRecordContextItem, ManuelleKorrekturDto, VManuelleKorrekturDto} from './entityFramework-models';
import moment from 'moment';

describe('Entity Framework Tests', () => {

	describe('init Tests', () => {
		it('ArchiveRecordContextItem ', () => {
			let archiveRecordContextItem = new ArchiveRecordContextItem();
			archiveRecordContextItem.title = 'Test';
			archiveRecordContextItem.referenceCode = 'Sigi';
			archiveRecordContextItem.archiveRecordId = '23569';
			archiveRecordContextItem.referenceCode = 'Sigi';
			archiveRecordContextItem.dateRangeText = '1982-2090';
			archiveRecordContextItem.level = 'Serie';
			archiveRecordContextItem.protected = true;
			let data = archiveRecordContextItem.toJSON();
			const lk =  ArchiveRecordContextItem.fromJS(data);
			expect(lk.title).toBe(archiveRecordContextItem.title);
			expect(lk.referenceCode).toBe(archiveRecordContextItem.referenceCode);
			expect(lk.archiveRecordId).toBe(archiveRecordContextItem.archiveRecordId);
			expect(lk.dateRangeText).toBe(archiveRecordContextItem.dateRangeText);
			expect(lk.level).toBe(archiveRecordContextItem.level);
			expect(lk.protected).toBe(archiveRecordContextItem.protected);
			expect(lk.title).toBe('Test');
			expect(lk.referenceCode).toBe('Sigi');
			expect(lk.archiveRecordId).toBe('23569');
			expect(lk.dateRangeText).toBe('1982-2090');
			expect(lk.level).toBe('Serie');
			expect(lk.protected).toBeTruthy();
		});
	});

	it('VManuelleKorrekturDto ', () => {
		let manuelleKorrekturDto = new VManuelleKorrekturDto();
		manuelleKorrekturDto.titel = 'Test';
		manuelleKorrekturDto.veId =  1235;
		manuelleKorrekturDto.signatur = 'sigi';
		manuelleKorrekturDto.aktenzeichen = 'aktenzeichen';
		manuelleKorrekturDto.anonymisiertZumErfassungszeitpunk = true;
		manuelleKorrekturDto.anonymisierungsstatus = 1;
		manuelleKorrekturDto.darinAutomatischAnonymisiert = 'darinAutomatischAnonymisiert';
		manuelleKorrekturDto.erzeugtAm = moment().startOf('day').toDate();
		manuelleKorrekturDto.erzeugtVon = 'Pet';
		manuelleKorrekturDto.darinGemAIS = 'darinGemAIS';
		manuelleKorrekturDto.darinManuellKorrigiert = 'darinManuellKorrigiert';
		manuelleKorrekturDto.entstehungszeitraum = '1982';
		manuelleKorrekturDto.geändertAm = moment().startOf('day').toDate();
		manuelleKorrekturDto.geändertVon = 'Pet';
		manuelleKorrekturDto.hierachiestufe = 'tief';
		manuelleKorrekturDto.kommentar = 'kommentat';
		manuelleKorrekturDto.publikationsrechte = 'Bar';
		manuelleKorrekturDto.verwandteVEAutomatischAnonymisiert = 'verwandteVEAutomatischAnonymisiert';
		manuelleKorrekturDto.verwandteVEManuellKorrigiert = 'verwandteVEManuellKorrigiert';
		manuelleKorrekturDto.verwandteVEGemAIS = 'verwandteVEGemAIS';
		manuelleKorrekturDto.schutzfristverzeichnung = 'schutzfristverzeichnung';
		manuelleKorrekturDto.schutzfristende =  moment().startOf('day').toDate();
		manuelleKorrekturDto.zugänglichkeitGemässBGA = 'zugänglichkeitGemässBGA';
		manuelleKorrekturDto.zusaetzlicheInformationenGemAIS = 'zusaetzlicheInformationenGemAIS';
		manuelleKorrekturDto.zusaetzlicheInformationenManuellKorrigiert = 'zusaetzlicheInformationenManuellKorrigiert';
		manuelleKorrekturDto.zusaetzlicheInformationenAutomatischAnonymisiert = 'zusaetzlicheInformationenAutomatischAnonymisiert';
		manuelleKorrekturDto.titelGemAIS = 'titelGemAIS';
		manuelleKorrekturDto.titelManuellKorrigiert = 'titelManuellKorrigiert';
		manuelleKorrekturDto.titelAutomatischAnonymisiert = 'titelAutomatischAnonymisiert';

		let data = manuelleKorrekturDto.toJSON();
		const korrekturDto =  VManuelleKorrekturDto.fromJS(data);
		expect(korrekturDto.titel ).toBe( 'Test');
		expect(korrekturDto.veId ).toBe(  1235);
		expect(korrekturDto.signatur ).toBe( 'sigi');
		expect(korrekturDto.aktenzeichen ).toBe( 'aktenzeichen');
		expect(korrekturDto.anonymisiertZumErfassungszeitpunk ).toBe( true);
		expect(korrekturDto.anonymisierungsstatus ).toBe( 1);
		expect(korrekturDto.darinAutomatischAnonymisiert ).toBe( 'darinAutomatischAnonymisiert');
		expect(korrekturDto.erzeugtAm.toDateString() ).toBe( manuelleKorrekturDto.erzeugtAm.toDateString());
		expect(korrekturDto.erzeugtVon ).toBe( 'Pet');
		expect(korrekturDto.darinGemAIS ).toBe( 'darinGemAIS');
		expect(korrekturDto.darinManuellKorrigiert ).toBe( 'darinManuellKorrigiert');
		expect(korrekturDto.entstehungszeitraum ).toBe( '1982');
		expect(korrekturDto.geändertAm.toDateString() ).toBe( manuelleKorrekturDto.geändertAm.toDateString());
		expect(korrekturDto.geändertVon ).toBe( 'Pet');
		expect(korrekturDto.hierachiestufe ).toBe( 'tief');
		expect(korrekturDto.kommentar ).toBe( 'kommentat');
		expect(korrekturDto.publikationsrechte ).toBe( 'Bar');
		expect(korrekturDto.verwandteVEAutomatischAnonymisiert ).toBe( 'verwandteVEAutomatischAnonymisiert');
		expect(korrekturDto.verwandteVEManuellKorrigiert ).toBe( 'verwandteVEManuellKorrigiert');
		expect(korrekturDto.verwandteVEGemAIS ).toBe( 'verwandteVEGemAIS');
		expect(korrekturDto.schutzfristverzeichnung ).toBe( 'schutzfristverzeichnung');
		expect(korrekturDto.schutzfristende.toDateString() ).toBe( manuelleKorrekturDto.schutzfristende.toDateString());
		expect(korrekturDto.zugänglichkeitGemässBGA ).toBe( 'zugänglichkeitGemässBGA');
		expect(korrekturDto.zusaetzlicheInformationenGemAIS ).toBe( 'zusaetzlicheInformationenGemAIS');
		expect(korrekturDto.zusaetzlicheInformationenManuellKorrigiert ).toBe( 'zusaetzlicheInformationenManuellKorrigiert');
		expect(korrekturDto.zusaetzlicheInformationenAutomatischAnonymisiert ).toBe( 'zusaetzlicheInformationenAutomatischAnonymisiert');
		expect(korrekturDto.titelGemAIS ).toBe( 'titelGemAIS');
		expect(korrekturDto.titelManuellKorrigiert ).toBe( 'titelManuellKorrigiert');
		expect(korrekturDto.titelAutomatischAnonymisiert ).toBe( 'titelAutomatischAnonymisiert');
	});

	it('ManuelleKorrekturDto ', () => {
		let manuelleKorrekturDto = new ManuelleKorrekturDto();
		manuelleKorrekturDto.titel = 'Test';
		manuelleKorrekturDto.veId =  1235;
		manuelleKorrekturDto.signatur = 'sigi';
		manuelleKorrekturDto.aktenzeichen = 'aktenzeichen';
		manuelleKorrekturDto.anonymisiertZumErfassungszeitpunk = true;
		manuelleKorrekturDto.anonymisierungsstatus = 1;
		manuelleKorrekturDto.erzeugtAm = moment().startOf('day').toDate();
		manuelleKorrekturDto.erzeugtVon = 'Pet';
		manuelleKorrekturDto.entstehungszeitraum = '1982';
		manuelleKorrekturDto.geändertAm = moment().startOf('day').toDate();
		manuelleKorrekturDto.geändertVon = 'Pet';
		manuelleKorrekturDto.hierachiestufe = 'tief';
		manuelleKorrekturDto.kommentar = 'kommentat';
		manuelleKorrekturDto.publikationsrechte = 'Bar';
		manuelleKorrekturDto.schutzfristverzeichnung = 'schutzfristverzeichnung';
		manuelleKorrekturDto.schutzfristende =  moment().startOf('day').toDate();
		manuelleKorrekturDto.zugänglichkeitGemässBGA = 'zugänglichkeitGemässBGA';

		let data = manuelleKorrekturDto.toJSON();
		const korrekturDto =  ManuelleKorrekturDto.fromJS(data);
		expect(korrekturDto.titel ).toBe( 'Test');
		expect(korrekturDto.veId ).toBe(  1235);
		expect(korrekturDto.signatur ).toBe( 'sigi');
		expect(korrekturDto.aktenzeichen ).toBe( 'aktenzeichen');
		expect(korrekturDto.anonymisiertZumErfassungszeitpunk ).toBe( true);
		expect(korrekturDto.anonymisierungsstatus ).toBe( 1);
		expect(korrekturDto.erzeugtAm.toDateString() ).toBe( manuelleKorrekturDto.erzeugtAm.toDateString());
		expect(korrekturDto.erzeugtVon ).toBe( 'Pet');
		expect(korrekturDto.entstehungszeitraum ).toBe( '1982');
		expect(korrekturDto.geändertAm.toDateString() ).toBe( manuelleKorrekturDto.geändertAm.toDateString());
		expect(korrekturDto.geändertVon ).toBe( 'Pet');
		expect(korrekturDto.hierachiestufe ).toBe( 'tief');
		expect(korrekturDto.kommentar ).toBe( 'kommentat');
		expect(korrekturDto.publikationsrechte ).toBe( 'Bar');
		expect(korrekturDto.schutzfristverzeichnung ).toBe( 'schutzfristverzeichnung');
		expect(korrekturDto.schutzfristende.toDateString() ).toBe( manuelleKorrekturDto.schutzfristende.toDateString());
		expect(korrekturDto.zugänglichkeitGemässBGA ).toBe( 'zugänglichkeitGemässBGA');
	});
});
